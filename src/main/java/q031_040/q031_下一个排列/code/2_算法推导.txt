从前往后找，找最后一个

1、先找出最大的索引 k 满足 nums[k] < nums[k+1]，如果不存在，就翻转整个数组；（找最后一个（i,j）升序的数组）
2、再找出另一个最大索引 l 满足 nums[l] > nums[k]；（从i往后找第一个大于i值得数组）
3、交换 nums[l] 和 nums[k]；（交换连个索引上的值）
4、最后翻转 nums[k+1:]。（对k+1：后面的数组排序）
举个例子：

比如 nums = [1,2,7,4,3,1]，下一个排列是什么？

我们找到第一个最大索引是 nums[1] = 2

再找到第二个最大索引是 nums[4] = 3

交换，nums = [1,3,7,4,2,1];

翻转，nums = [1,3,1,2,4,7]

完毕!

所以,

时间复杂度：O(n)O(n)

空间复杂度：O(1)O(1)
